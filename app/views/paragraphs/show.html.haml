.page-header
  %h1= link_to title(@game.name), @game

- if @parent_choices.any?
  %h2= t(".parent_actions")
  %table.table.table-hover
    %thead
      %tr
        %th ID
        %th= t(".parent_paragraph_content")
        %th= t(".parent_choice_content")
    %tbody
      - @paragraph.parent_choices.each do |parent_choice|
        %tr
          %td= parent_choice.parent_paragraph.id
          %td
            = link_to parent_choice.parent_paragraph.content,
              [@game, parent_choice.parent_paragraph]
          %td= parent_choice.content

.panel.panel-default
  .panel-body
    %p= @paragraph.content
    = action_link_to :edit, [:edit, @game, @paragraph], if: can?(:edit, @paragraph)
    = action_link_to :destroy, [@game, @paragraph], method: :delete,
      data: { confirm: t("questions.confirm") }, if: can?(:destroy, @paragraph)
      
    = action_link_to t(".new_choice"), [:new, @game, @paragraph, :choice],
      if: can?(:new, Choice.new(parent_paragraph: @paragraph))

  .panel-footer
    .list-group
      - @children_choices.each do |choice|
        .list-group-item
          = link_to_unless choice.child_paragraph.nil?, choice.content,
            [@game, choice.child_paragraph]
          = action_link_to t(".new_child_paragraph"),
            new_game_paragraph_path(params: { choice_id: choice.id }),
            if: !choice.child_paragraph.present? && can?(:new, @game.paragraphs.build)
          = action_link_to :edit, [:edit, @game, @paragraph, choice], if: can?(:edit, choice)
          = action_link_to :destroy, [@game, @paragraph, choice], method: :delete,
            data: { confirm: t("questions.confirm") }, if: can?(:destroy, choice)
  


